<idea-plugin>

   <id>zowe-galasa-intellij</id>
   <name>IBA Group's Test Plug-in for Galasa</name>

   <vendor email="ukalesnikau@ibagroup.eu" url="http://github.com/for-mainframe/zowe-galasa-intellij">IBA Group</vendor>

   <description><![CDATA[
      To fulfil later
    ]]></description>

   <depends>org.jetbrains.kotlin</depends>
   <depends>com.intellij.modules.java</depends>
   <depends>org.jetbrains.plugins.gradle</depends>

   <actions>
<!--      <action id="io.kotest.actions.NextTestAction"-->
<!--              class="io.kotest.plugin.intellij.actions.NextTestAction" text="Next Test"-->
<!--              description="Navigate to the next test in this spec class">-->
<!--         <add-to-group group-id="CodeMenu" anchor="last"/>-->
<!--         <keyboard-shortcut keymap="$default" first-keystroke="alt n"/>-->
<!--      </action>-->

<!--      <action id="io.kotest.actions.PreviousTestAction"-->
<!--              class="io.kotest.plugin.intellij.actions.PreviousTestAction" text="Previous Test"-->
<!--              description="Navigate to the previous test in this spec class">-->
<!--         <add-to-group group-id="CodeMenu" anchor="last"/>-->
<!--         <keyboard-shortcut keymap="$default" first-keystroke="alt P"/>-->
<!--      </action>-->
   </actions>

   <extensions defaultExtensionNs="com.intellij">
<!--      <configurationType implementation="io.kotest.plugin.intellij.KotestConfigurationType"/>-->

<!--      <annotator language="kotlin"-->
<!--                 implementationClass="io.kotest.plugin.intellij.annotators.DuplicatedTestNameAnnotator"/>-->

<!--      <annotator language="kotlin"-->
<!--                 implementationClass="io.kotest.plugin.intellij.annotators.FocusInNestedTestAnnotator"/>-->

<!--      TODO: this extension was already commented out-->
<!--      <localInspection groupPath="Kotlin" language="JVM" shortName="ShouldBeInstanceOfInspection"-->
<!--                       bundle="KotestGadgetsBundle"-->
<!--                       key="kotest.should.be.instance.of"-->
<!--                       groupBundle="KotestGadgetsBundle" groupKey="group.names.kotest"-->
<!--                       enabledByDefault="true" level="WARNING"-->
<!--                       implementationClass="io.kotest.plugin.intellij.inspections.ShouldBeInstanceOfInspection"/>-->

      <toolWindow id="org.zowe.galasa.plugin.intellij.toolwindow.TestExplorerToolWindowFactory"
                  anchor="right"
                  icon="/zowe-icon.svg"
                  factoryClass="org.zowe.galasa.plugin.intellij.toolwindow.TestExplorerToolWindowFactory"/>

      <toolWindow id="org.zowe.galasa.plugin.intellij.ctl.GalasaCTLToolWindowFactory"
                  anchor="bottom"
                  canCloseContents="false"
                  factoryClass="org.zowe.galasa.plugin.intellij.ctl.GalasaCTLToolWindowFactory"/>

<!--      <lang.structureViewExtension implementation="io.kotest.plugin.intellij.structure.KotestStructureViewExtension"/>-->

<!--      <codeInsight.lineMarkerProvider language="kotlin" implementationClass="io.kotest.plugin.intellij.linemarker.InterpolatedTestLineMarker"/>-->
<!--      <codeInsight.lineMarkerProvider language="kotlin" implementationClass="io.kotest.plugin.intellij.linemarker.DisabledTestLineMarker"/>-->
      <runLineMarkerContributor implementationClass="org.zowe.galasa.plugin.intellij.run.GalasaTestRunLineMarkerContributor"
                                language=""/>
<!--      <runLineMarkerContributor language="kotlin" implementationClass="io.kotest.plugin.intellij.run.SpecRunLineMarkerContributor"/>-->

<!--      <runConfigurationProducer implementation="io.kotest.plugin.intellij.run.SpecRunConfigurationProducer"/>-->
<!--      <runConfigurationProducer implementation="io.kotest.plugin.intellij.run.TestPathRunConfigurationProducer"/>-->
<!--      <runConfigurationProducer implementation="io.kotest.plugin.intellij.run.PackageRunConfigurationProducer"/>-->
<!--      <runConfigurationProducer implementation="io.kotest.plugin.intellij.run.GradleSpecRunConfigurationProducer"/>-->

<!--      <implicitUsageProvider implementation="io.kotest.plugin.intellij.implicits.SpecImplicitUsageProvider"/>-->
<!--      <implicitUsageProvider implementation="io.kotest.plugin.intellij.implicits.ProjectConfigImplicitUsageProvider"/>-->
<!--      <implicitUsageProvider implementation="io.kotest.plugin.intellij.implicits.AutoScanUsageProvider"/>-->

<!--      <testFinder implementation="io.kotest.plugin.intellij.KotestTestFinder"/>-->
<!--      <testFramework id="Kotest" implementation="io.kotest.plugin.intellij.KotestTestFramework"/>-->
<!--      <testGenerator language="kotlin" implementationClass="io.kotest.plugin.intellij.KotestTestGenerator"/>-->

<!--      <codeInsight.externalLibraryResolver implementation="io.kotest.plugin.intellij.KotestExternalLibraryResolver"/>-->
<!--      <stacktrace.fold substring="at io.kotest."/>-->
<!--      <programRunner implementation="org.zowe.galasa.plugin.intellij.run.GalasaDebuggerRunner"/>-->
<!--      <library.dependencyScopeSuggester implementation="io.kotest.plugin.intellij.KotestDependencyScopeSuggester"/>-->

<!--      <intentionAction>-->
<!--         <className>io.kotest.plugin.intellij.intentions.SoftAssertIntention</className>-->
<!--         <category>Kotlin/Test</category>-->
<!--         <descriptionDirectoryName>SoftAssertIntention</descriptionDirectoryName>-->
<!--      </intentionAction>-->

<!--      <intentionAction>-->
<!--         <className>io.kotest.plugin.intellij.intentions.BangIntention</className>-->
<!--         <category>Kotlin/Test</category>-->
<!--         <descriptionDirectoryName>BangIntention</descriptionDirectoryName>-->
<!--      </intentionAction>-->

<!--      <intentionAction>-->
<!--         <className>io.kotest.plugin.intellij.intentions.ShouldThrowIntention</className>-->
<!--         <category>Kotlin/Test</category>-->
<!--         <descriptionDirectoryName>ShouldThrowIntention</descriptionDirectoryName>-->
<!--      </intentionAction>-->

<!--      <intentionAction>-->
<!--         <className>io.kotest.plugin.intellij.intentions.ShouldThrowAnyIntention</className>-->
<!--         <category>Kotlin/Test</category>-->
<!--         <descriptionDirectoryName>ShouldThrowAnyIntention</descriptionDirectoryName>-->
<!--      </intentionAction>-->

<!--      <intentionAction>-->
<!--         <className>io.kotest.plugin.intellij.intentions.ShouldThrowExactlyIntention</className>-->
<!--         <category>Kotlin/Test</category>-->
<!--         <descriptionDirectoryName>ShouldThrowExactlyIntention</descriptionDirectoryName>-->
<!--      </intentionAction>-->
   </extensions>

</idea-plugin>
